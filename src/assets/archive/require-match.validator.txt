import { Directive, Input } from '@angular/core';
import { NG_VALIDATORS, Validator, FormControl, ValidationErrors, } from '@angular/forms';

@Directive({
  selector: '[requireMatch][ngModel]',
  providers: [
    { provide: NG_VALIDATORS, useExisting: RequireMatchValidator, multi: true }
  ]
})
export class RequireMatchValidator implements Validator { 
  @Input() clone: FormControl;
  @Input() orgValue: string;
  
  validate(control: FormControl): ValidationErrors | null {
    if(!control.value && !this.clone) return null;
   
    if(this.clone?.value) {
      this.clone.setErrors(control.value == this.clone.value ? null : {
        requireMatch: {
          orgValue: control.value,
          currentValue: this.clone.value
        }
      })
    } 

    return this.clone || (control.value == this.orgValue) ? null : {
      requireMatch: {
        orgValue: this.orgValue,
        currentValue: control.value
      }
    };
  }
}


