import { Directive, ElementRef, AfterViewChecked, HostListener, Output, EventEmitter } from '@angular/core';

@Directive({
    selector: '[isXAxisOverflow]',
    standalone: true
})
export class IsXAxisOverflowDirective implements AfterViewChecked {
    @HostListener('window:resize', ['$event'])
    onResize(event: Event): void {
        const outerWidth: number = (event.target as Window).outerWidth;
        const innerWidth: number = (event.target as Window).innerWidth;

        // console.log(outerWidth);
        // console.log(innerWidth);

        console.log(Math.ceil((( outerWidth - 10 ) / innerWidth) * 100)) // Browser zoom level
        this.isOverflow();
    };

    @Output() overflow: EventEmitter<boolean> = new EventEmitter<boolean>();

    constructor(
        private readonly element: ElementRef
    ) {}

    ngAfterViewChecked(): void {
        this.isOverflow();
    }

    isOverflow(): void {
        this.overflow.emit(this.isElementXAxisOverflow());
    }

    isElementXAxisOverflow(): boolean {
        return this.element.nativeElement.offsetWidth < this.element.nativeElement.scrollWidth;
    }
}